{"version":3,"file":"index.js","sources":["../../electron/main/index.ts"],"sourcesContent":["import { app, BrowserWindow, ipcMain, IpcMainEvent, nativeTheme } from \"electron\";\nimport { join } from \"path\";\n\nconst createBrowserWindow = (appIsPackaged: boolean): BrowserWindow => {\n    const preloadScriptFilePath = appIsPackaged\n        ? join(__dirname, \"..\", \"..\", \"dist-electron\", \"preload\", \"index.js\")\n        : join(__dirname, \"..\", \"preload\", \"index.js\");\n\n    return new BrowserWindow({\n        autoHideMenuBar: true,\n        webPreferences: {\n            preload: preloadScriptFilePath,\n        },\n        vibrancy: \"window\",\n        backgroundMaterial: \"auto\",\n        frame: false,\n        height: 60,\n    });\n};\n\nconst loadFileOrUrl = (browserWindow: BrowserWindow, appIsPackaged: boolean) => {\n    appIsPackaged\n        ? browserWindow.loadFile(join(__dirname, \"..\", \"..\", \"dist\", \"index.html\"))\n        : browserWindow.loadURL(process.env.VITE_DEV_SERVER_URL);\n};\n\nconst registerIpcEventListeners = (browserWindow: BrowserWindow) => {\n    ipcMain.on(\"themeShouldUseDarkColors\", (event: IpcMainEvent) => {\n        event.returnValue = nativeTheme.shouldUseDarkColors;\n    });\n\n    ipcMain.on(\"settingsOpenStateChanged\", (_, { settingsOpened }: { settingsOpened: boolean }) =>\n        browserWindow.setBounds({ height: settingsOpened ? 600 : 60 })\n    );\n};\n\nconst registerNativeThemeEventListeners = (allBrowserWindows: BrowserWindow[]) => {\n    nativeTheme.addListener(\"updated\", () => {\n        for (const browserWindow of allBrowserWindows) {\n            browserWindow.webContents.send(\"nativeThemeChanged\");\n        }\n    });\n};\n\n(async () => {\n    await app.whenReady();\n    const browserWindow = createBrowserWindow(app.isPackaged);\n    loadFileOrUrl(browserWindow, app.isPackaged);\n    registerIpcEventListeners(browserWindow);\n    registerNativeThemeEventListeners(BrowserWindow.getAllWindows());\n})();\n"],"names":["join","BrowserWindow","ipcMain","nativeTheme","app"],"mappings":";;;AAGA,MAAM,sBAAsB,CAAC,kBAA0C;AACnE,QAAM,wBAAwB,gBACxBA,KAAAA,KAAK,WAAW,MAAM,MAAM,iBAAiB,WAAW,UAAU,IAClEA,KAAAA,KAAK,WAAW,MAAM,WAAW,UAAU;AAEjD,SAAO,IAAIC,SAAAA,cAAc;AAAA,IACrB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,MACZ,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACX;AACL;AAEA,MAAM,gBAAgB,CAAC,eAA8B,kBAA2B;AAC5E,kBACM,cAAc,SAASD,KAAK,KAAA,WAAW,MAAM,MAAM,QAAQ,YAAY,CAAC,IACxE,cAAc,QAAQ,QAAQ,IAAI,mBAAmB;AAC/D;AAEA,MAAM,4BAA4B,CAAC,kBAAiC;AACxDE,WAAAA,QAAA,GAAG,4BAA4B,CAAC,UAAwB;AAC5D,UAAM,cAAcC,SAAY,YAAA;AAAA,EAAA,CACnC;AAEOD,WAAAA,QAAA;AAAA,IAAG;AAAA,IAA4B,CAAC,GAAG,EAAE,eACzC,MAAA,cAAc,UAAU,EAAE,QAAQ,iBAAiB,MAAM,IAAI;AAAA,EAAA;AAErE;AAEA,MAAM,oCAAoC,CAAC,sBAAuC;AAClEC,uBAAA,YAAY,WAAW,MAAM;AACrC,eAAW,iBAAiB,mBAAmB;AAC7B,oBAAA,YAAY,KAAK,oBAAoB;AAAA,IACvD;AAAA,EAAA,CACH;AACL;AAAA,CAEC,YAAY;AACT,QAAMC,SAAAA,IAAI;AACJ,QAAA,gBAAgB,oBAAoBA,SAAA,IAAI,UAAU;AAC1C,gBAAA,eAAeA,aAAI,UAAU;AAC3C,4BAA0B,aAAa;AACL,oCAAAH,SAAAA,cAAc,eAAe;AACnE,GAAG;"}